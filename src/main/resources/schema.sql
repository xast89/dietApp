DROP TABLE MEAL IF EXISTS ;
CREATE TABLE MEAL (
  MEAL_ID               BIGINT AUTO_INCREMENT,
  START                 TIMESTAMP NOT NULL,
  DISH                    VARCHAR(100) NOT NULL,
  USER_ID BIGINT NOT NULL,
  PRIMARY KEY (MEAL_ID),
  foreign key (USER_ID) references USER(USER_ID)
);

DROP TABLE INCIDENT IF EXISTS;
CREATE TABLE INCIDENT (
  INCIDENT_ID               BIGINT AUTO_INCREMENT,
  START                 TIMESTAMP NOT NULL,
  REACTION                    VARCHAR(100) NOT NULL,
  PRIMARY KEY (INCIDENT_ID)
);

DROP TABLE SECURITY IF EXISTS;
CREATE TABLE SECURITY (
  SECURITY_ID               BIGINT AUTO_INCREMENT,
  LOGIN                 VARCHAR (100) NOT NULL,
  PASSWORD                 VARCHAR(100) NOT NULL,
  SALT                    VARCHAR(100) NOT NULL,
  PRIMARY KEY (SECURITY_ID)
);

DROP TABLE USER IF EXISTS;
CREATE TABLE USER (
  USER_ID               BIGINT AUTO_INCREMENT,
  NAME                    VARCHAR(100),
  AGE                    INT,
  SECURITY_ID     BIGINT NOT NULL,
  PRIMARY KEY (USER_ID),
  foreign key (SECURITY_ID) references SECURITY(SECURITY_ID)
);

DROP TABLE USER_INCIDENT IF EXISTS;
CREATE TABLE USER_INCIDENT (
  USER_ID int REFERENCES USER (USER_ID) ON UPDATE CASCADE,
  INCIDENT_ID    int REFERENCES INCIDENT (INCIDENT_ID) ON UPDATE CASCADE ON DELETE CASCADE,
   CONSTRAINT USER_INCIDENT_PKEY PRIMARY KEY (USER_ID, INCIDENT_ID)  -- explicit pk
);

-- DROP TABLE USER_MEAL IF EXISTS;
-- CREATE TABLE USER_MEAL (
--   USER_ID int REFERENCES USER (USER_ID) ON UPDATE CASCADE,
--   MEAL_ID    int REFERENCES MEAL (MEAL_ID) ON UPDATE CASCADE ON DELETE CASCADE,
--    CONSTRAINT USER_MEAL_PKEY PRIMARY KEY (USER_ID, MEAL_ID)  -- explicit pk
-- );

DROP TABLE Cart IF EXISTS;
CREATE TABLE Cart (
  cart_id BIGINT AUTO_INCREMENT,
  PRIMARY KEY (`cart_id`)
);
-- --
DROP TABLE Items IF EXISTS;
CREATE TABLE Items (
  post_id BIGINT AUTO_INCREMENT,
  cart_id BIGINT NOT NULL,
  PRIMARY KEY (post_id),
  foreign key (cart_id) references Cart(cart_id)
);

DROP TABLE TOY IF EXISTS;
CREATE TABLE TOY (
  TOY_ID    BIGINT AUTO_INCREMENT,
  NAME      VARCHAR(100) NOT NULL,
  PRIMARY KEY (TOY_ID)

  );

  DROP TABLE CITY IF EXISTS;
CREATE TABLE CITY (
  CITY_ID   BIGINT AUTO_INCREMENT,
  NAME      VARCHAR(100) NOT NULL,
  PRIMARY KEY (CITY_ID)
);

  DROP TABLE EMPLOYEE IF EXISTS;
CREATE TABLE EMPLOYEE (
  EMPLOYEE_ID   BIGINT AUTO_INCREMENT,
  NAME          VARCHAR(100) NOT NULL,
  CITY_ID       BIGINT,
  PRIMARY KEY (EMPLOYEE_ID),
  foreign key (CITY_ID) references CITY(CITY_ID)
);



-- CREATE TABLE POST (
--   POST_ID   BIGINT AUTO_INCREMENT,
--   TITLE      VARCHAR(100) NOT NULL,
--   PRIMARY KEY (POST_ID)
-- );
--
--
--
-- CREATE TABLE TAG (
--   TAG_ID   BIGINT AUTO_INCREMENT,
--   NAME      VARCHAR(100) NOT NULL,
--   PRIMARY KEY (TAG_ID)
-- );
--
--
-- CREATE TABLE POST_TAG (
--   POST_ID int REFERENCES POST (POST_ID) ON UPDATE CASCADE,
--   TAG_ID    int REFERENCES TAG (TAG_ID) ON UPDATE CASCADE ON DELETE CASCADE,
--    CONSTRAINT POST_TAG_PKEY PRIMARY KEY (POST_ID, TAG_ID)  -- explicit pk
-- );